<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssic.game.admin.mapper.TImsRoleExMapper">
	<select id="findBy" resultType="com.ssic.game.admin.pojo.Roles">
		SELECT
		id AS id,
		create_time AS create_time,
		role_name AS role_name,
		no AS
		no,
		pj_no AS pj_no,
		stat as stat,
		remark AS remark,
		seq AS seq,
		pid AS pid
		FROM
		t_admin_role where 1=1
		<include refid="where_clause_1" />
	</select>

	<sql id="where_clause_1">
		<if test="role.id != null">
			and id = #{role.id}
		</if>
		<if test="role.no != null">
			and no = #{role.no}
		</if>
		<if test="role.stat != null">
			and stat = #{role.stat}
		</if>
	</sql>

	<select id="findRoleMenu" resultType="com.ssic.game.admin.dto.RoleMenuDto">
		SELECT DISTINCT
		trole0_.id
		AS id,
		tresource2_.id AS menu_id,
		trole0_.create_time AS create_time,
		trole0_.role_name AS role_name,
		trole0_.NO AS no,
		trole0_.pj_no AS
		pj_no,
		trole0_.post_no AS post_no,
		trole0_.remark AS remark,
		trole0_.seq
		AS seq,
		trole0_.pid AS pid,
		tresource2_.create_time AS menu_create_time,
		tresource2_.icon AS menu_icon,
		tresource2_.isRight AS menu_isRight,
		tresource2_.NAME AS menu_name,
		tresource2_.NO AS menu_no,
		tresource2_.pj_no AS menu_pj_no,
		tresource2_.remark AS menu_remark,
		tresource2_.seq AS menu_seq,
		tresource2_.pid AS menu_pid,
		tresource2_.menu_type_id AS menu_menu_type_id,
		tresource2_.url AS
		menu_url,
		tresources1_.role_id AS r_m_role_id,
		tresources1_.menu_id AS
		r_m_menu_id
		FROM
		t_admin_role trole0_
		LEFT OUTER JOIN t_admin_role_menu
		tresources1_ ON trole0_.id =
		tresources1_.role_id
		LEFT OUTER JOIN
		t_admin_menu tresource2_ ON tresources1_.menu_id =
		tresource2_.id
		WHERE
		trole0_.id =#{role.id}
		and tresources1_.stat = '1' and tresource2_.stat='1'
	</select>

	<select id="findByUserId" parameterType="java.lang.String"
		resultType="com.ssic.game.admin.pojo.Roles">
		SELECT
		c.id AS id,
		c.create_time AS create_time,
		c.role_name
		AS role_name,
		c.no AS no,
		c.pj_no AS pj_no,
		c.remark AS remark,
		c.seq AS
		seq,
		c.pid AS pid
		FROM
		t_admin_role c
		WHERE
		c.id IN (
		SELECT DISTINCT
		b.role_id
		FROM
		t_admin_users_role b
		WHERE
		b.user_id = #{user_id} and b.stat
		= '1'
		)
		AND c.stat
		= '1'

	</select>


	<select id="findById" resultType="com.ssic.game.admin.pojo.Roles">
		SELECT
		id AS id,
		create_time AS
		create_time,
		role_name AS role_name,
		no AS
		no,
		pj_no AS pj_no,
		remark AS
		remark,
		seq AS seq,
		pid AS pid
		FROM
		t_admin_role where id=#{roleId}
	</select>

	<select id="findByPid" resultType="com.ssic.game.admin.pojo.Roles">
		SELECT
		id AS id,
		create_time AS
		create_time,
		role_name AS role_name,
		no AS
		no,
		pj_no AS pj_no,
		remark AS
		remark,
		seq AS seq,
		pid AS pid
		FROM
		t_admin_role
		where pid=#{pid}
	</select>

	<select id="finSubMenus" resultType="com.ssic.game.admin.dto.TImsMenuDto">
		select id,
		icon,
		isRight,
		NAME,
		NO,
		pj_no,
		remark,
		seq,
		url,
		pid,
		menu_type_id,
		stat from t_admin_menu where pid = #{pid} and stat = '1'

	</select>

	<select id="findGreedTree" resultType="com.ssic.game.admin.pojo.MenuAndRoles">
		SELECT DISTINCT
		trole0_.id AS id,
		trole0_.create_time AS create_time,
		trole0_.role_name AS role_name,
		trole0_.no AS no,
		trole0_.pj_no AS
		pj_no,
		trole0_.post_no AS post_no,
		trole0_.remark AS remark,
		trole0_.seq
		AS seq,
		trole0_.pid AS pid,
		tuser4_.age AS age,
		tuser4_.createdatetime AS
		createdatetime,
		tuser4_.gender AS gender,
		tuser4_.isAdmin AS isAdmin,
		tuser4_.isDelete AS isDelete,
		tuser4_.modifydatetime AS modifydatetime,
		tuser4_.name AS name,
		tuser4_.password AS password,
		tuser4_.qjy_account
		AS qjy_account,
		tuser4_.user_account AS user_account,
		tuser4_.user_image AS user_image,
		tuser4_.user_no AS user_no,
		tusers3_.role_id AS role_id,
		tusers3_.user_id AS user_id,
		tresource2_.id AS menu_id,
		tresource2_.create_time AS menu_create_time,
		tresource2_.icon AS menu_icon,
		tresource2_.isRight AS menu_isright,
		tresource2_.NAME AS menu_name,
		tresource2_.NO AS menu_no,
		tresource2_.pj_no AS menu_pj_no,
		tresource2_.remark AS menu_remark,
		tresource2_.seq AS menu_seq,
		tresource2_.pid AS menu_pid,
		tresource2_.menu_type_id AS menu_menu_type_id,
		tresource2_.url AS
		menu_url,
		tresources1_.role_id AS r_role_id,
		tresources1_.menu_id AS
		r_menu_id
		FROM
		t_admin_role trole0_
		LEFT OUTER JOIN t_admin_role_menu
		tresources1_ ON trole0_.id = tresources1_.role_id
		LEFT OUTER JOIN
		t_admin_menu tresource2_ ON tresources1_.menu_id =
		tresource2_.id
		INNER
		JOIN t_admin_users_role tusers3_ ON trole0_.id =
		tusers3_.role_id
		INNER
		JOIN t_admin_users tuser4_ ON tusers3_.user_id =
		tuser4_.id
		WHERE 1=1 and
		tusers3_.stat = '1' and tresources1_.stat = '1'
		<if test="role.pid != null">
			and tuser4_.id =#{role.pid}
		</if>
		<if test="role.id != null">
			and trole0_.id =#{role.id}
		</if>
		ORDER BY
		trole0_.seq
	</select>


	<insert id="inUserRole" parameterType="com.ssic.game.admin.dto.TImsUsersRoleDto">
		INSERT INTO
		t_admin_users_role (id, user_id, role_id, stat)
		VALUES
		(#{userRole.id},#{userRole.user_id},#{userRole.role_id},'1')
	</insert>

	<insert id="insertRole" parameterType="com.ssic.game.admin.dto.TImsRoleDto">
		INSERT INTO t_admin_role (
		id,
		create_time,
		role_name,
		no,
		pj_no,
		post_no,
		remark,
		seq,
		pid,
		stat
		)
		VALUES
		(#{role.id,jdbcType=VARCHAR},
		now(),
		#{role.role_name,jdbcType=VARCHAR},
		#{role.no,jdbcType=NUMERIC},
		#{role.pj_no,jdbcType=VARCHAR},
		#{role.post_no,jdbcType=VARCHAR},
		#{role.remark,jdbcType=VARCHAR},
		#{role.seq,jdbcType=NUMERIC},
		#{role.pid,jdbcType=VARCHAR},1)
	</insert>

	<update id="updateRole" parameterType="com.ssic.game.admin.dto.TImsRoleDto">
		UPDATE t_admin_role set
		<if test="role.role_name != null">
			role_name = #{role.role_name} ,
		</if>
		<if test="role.no != null">
			no = '#{role.no} ,
		</if>
		<if test="role.pj_no != null">
			pj_no = #{role.pj_no} ,
		</if>
		<if test="role.post_no != null">
			post_no = #{role.post_no} ,
		</if>
		<if test="role.remark != null">
			remark = #{role.remark} ,
		</if>
		<if test="role.seq != null">
			seq = #{role.seq} ,
		</if>
		<if test="role.stat != null">
			stat = #{role.stat} ,
		</if>
		<if test="role.pid != null">
			pid = #{role.pid}
		</if>
		WHERE
		id = #{role.id}
	</update>

	<update id="updateUserRole" parameterType="com.ssic.game.admin.dto.TImsUsersRoleDto">
		update
		t_admin_users_role b set b.stat = #{userRole.stat} where b.role_id =
		#{userRole.role_id}
	</update>

	<update id="updateRoleStat" parameterType="com.ssic.game.admin.dto.TImsRoleDto">
		UPDATE t_admin_role set

		<if test="role.stat != null">
			stat = #{role.stat}
		</if>

		WHERE
		id = #{role.id}
	</update>

	<update id="updateRoleMenu" parameterType="com.ssic.game.admin.dto.TImsRoleMenuDto">

		update t_admin_role_menu a set a.stat = #{roleMenu.stat} where a.role_id =
		#{roleMenu.role_id}
	</update>

	<insert id="insertRoleMenu" parameterType="com.ssic.game.admin.dto.TImsRoleMenuDto">
		insert into t_admin_role_menu (id,role_id,menu_id,stat)
		VALUES(#{roleMenu.id},#{roleMenu.role_id},#{roleMenu.menu_id},#{roleMenu.stat})
	</insert>
</mapper>